/// A model used for Shoco compression
#[derive(Debug,Clone,Eq,PartialEq)]
pub struct ShocoModel {
    pub min_chr : u8,
    pub max_chr : u8,
    pub chrs_by_chr_id : Vec<u8>,
    pub chr_ids_by_chr : [i8;256],
    pub successor_ids_by_chr_id_and_chr_id : Vec<Vec<i8>>,
    pub chrs_by_chr_and_successor_id : Vec<Vec<u8>>,
    pub packs : Vec<Pack>,
    pub max_successor_n : usize
}

impl ShocoModel {
    pub fn default() -> ShocoModel {
        ShocoModel {
            min_chr: 39,
            max_chr: 122,
            chrs_by_chr_id: vec![
                b'e', b'a', b'i', b'o', b't', b'h', b'n', b'r', b's', b'l', b'u', b'c', b'w', b'm', b'd', b'b', b'p', b'f', b'g', b'v', b'y', b'k', b'H', b'-', b'M', b'T', b'\'', b'B', b'x', b'I', b'W', b'L'
            ],
            chr_ids_by_chr: [
                -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 27, -1, -1, -1, -1, -1, 22, 29, -1, -1, 31, 24, -1, -1, -1, -1, -1, -1, 25, -1, -1, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 15, 11, 14, 0, 17, 18, 5, 2, -1, 21, 9, 13, 6, 3, 16, -1, 7, 8, 4, 10, 19, 12, 28, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
            ] ,
            successor_ids_by_chr_id_and_chr_id : vec![
                vec![7, 4, 12, -1, 6, -1, 1, 0, 3, 5, -1, 9, -1, 8, 2, -1, 15, 14, -1, 10, 11, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1],
                vec![-1, -1, 6, -1, 1, -1, 0, 3, 2, 4, 15, 11, -1, 9, 5, 10, 13, -1, 12, 8, 7, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                vec![9, 11, -1, 4, 2, -1, 0, 8, 1, 5, -1, 6, -1, 3, 7, 15, -1, 12, 10, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                vec![-1, -1, 14, 7, 5, -1, 1, 2, 8, 9, 0, 15, 6, 4, 11, -1, 12, 3, -1, 10, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                vec![2, 4, 3, 1, 5, 0, -1, 6, 10, 9, 7, 12, 11, -1, -1, -1, -1, 13, -1, -1, 8, -1, -1, 15, -1, -1, 14, -1, -1, -1, -1, -1],
                vec![0, 1, 2, 3, 4, -1, -1, 5, 9, 10, 6, -1, -1, 8, 15, 11, -1, 14, -1, -1, 7, -1, -1, 13, -1, -1, 12, -1, -1, -1, -1, -1],
                vec![2, 8, 7, 4, 3, -1, 9, -1, 6, 11, -1, 5, -1, -1, 0, -1, -1, 14, 1, 15, 10, 12, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1],
                vec![0, 3, 1, 2, 6, -1, 9, 8, 4, 12, 13, 10, -1, 11, 7, -1, -1, 15, 14, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                vec![0, 6, 3, 4, 1, 2, -1, -1, 5, 10, 7, 9, 11, 12, -1, -1, 8, 14, -1, -1, 15, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                vec![0, 6, 2, 5, 9, -1, -1, -1, 10, 1, 8, -1, 12, 14, 4, -1, 15, 7, -1, 13, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                vec![8, 10, 9, 15, 1, -1, 4, 0, 3, 2, -1, 6, -1, 12, 11, 13, 7, 14, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                vec![1, 3, 6, 0, 4, 2, -1, 7, 13, 8, 9, 11, -1, -1, 15, -1, -1, -1, -1, -1, 10, 5, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1],
                vec![3, 0, 1, 4, -1, 2, 5, 6, 7, 8, -1, 14, -1, -1, 9, 15, -1, 12, -1, -1, -1, 10, -1, 11, -1, -1, 13, -1, -1, -1, -1, -1],
                vec![0, 1, 3, 2, 15, -1, 12, -1, 7, 14, 4, -1, -1, 9, -1, 8, 5, 10, -1, -1, 6, -1, -1, 13, -1, -1, 11, -1, -1, -1, -1, -1],
                vec![0, 3, 1, 2, -1, -1, 12, 6, 4, 9, 7, -1, -1, 14, 8, -1, -1, 15, 11, 13, 5, -1, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1],
                vec![0, 5, 7, 2, 10, 13, -1, 6, 8, 1, 3, -1, -1, 14, 15, 11, -1, -1, -1, 12, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                vec![0, 2, 6, 3, 7, 10, -1, 1, 9, 4, 8, -1, -1, 15, -1, 12, 5, -1, -1, -1, 11, -1, -1, 13, -1, -1, 14, -1, -1, -1, -1, -1],
                vec![1, 3, 4, 0, 7, -1, 12, 2, 11, 8, 6, 13, -1, -1, -1, -1, -1, 5, -1, -1, 10, 15, -1, 9, -1, -1, 14, -1, -1, -1, -1, -1],
                vec![1, 3, 5, 2, 13, 0, 9, 4, 7, 6, 8, -1, -1, 15, -1, 11, -1, -1, 10, -1, 14, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1],
                vec![0, 2, 1, 3, -1, -1, -1, 6, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                vec![1, 11, 4, 0, 3, -1, 13, 12, 2, 7, -1, -1, 15, 10, 5, 8, 14, -1, -1, -1, -1, -1, -1, 9, -1, -1, 6, -1, -1, -1, -1, -1],
                vec![0, 9, 2, 14, 15, 4, 1, 13, 3, 5, -1, -1, 10, -1, -1, -1, -1, 6, 11, -1, 7, -1, -1, 8, -1, -1, 12, -1, -1, -1, -1, -1],
                vec![0, 1, 3, 2, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                vec![-1, 2, 14, -1, 1, 5, 8, 7, 4, 12, -1, 6, 9, 11, 13, 3, 10, 15, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1],
                vec![4, 3, 1, 5, -1, -1, -1, 0, -1, -1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                vec![2, 8, 4, 1, -1, 0, -1, 6, -1, -1, 5, -1, 7, -1, -1, -1, -1, -1, -1, -1, 10, -1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                vec![9, 7, -1, -1, 1, -1, 14, 6, 0, 3, 11, 2, -1, 4, 5, -1, -1, -1, -1, 8, -1, -1, -1, 10, -1, 15, -1, -1, -1, -1, -1, -1],
                vec![1, 3, 2, 4, -1, -1, -1, 5, -1, 7, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6, -1, -1, -1, -1, -1, -1, -1, -1, 8, -1, -1],
                vec![5, 3, 4, 12, 1, 6, -1, -1, -1, -1, 8, 2, -1, -1, -1, -1, 0, 9, -1, -1, 11, -1, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1],
                vec![-1, -1, -1, -1, 0, -1, 1, 12, 3, -1, -1, -1, -1, 5, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, 6, -1, 10],
                vec![2, 3, 1, 4, -1, 0, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, -1, -1, -1, -1, -1, -1, -1, -1, 6, -1, -1],
                vec![5, 1, 3, 0, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, 9, -1, -1, 6, -1, 7] ],
            chrs_by_chr_and_successor_id : vec![
                vec![b's', b't', b'c', b'l', b'm', b'd', b'r', b'a', b'v', b'e', b'-', b'u', b'A', b'E', b'n', b'T'],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![b'-', b't', b'a', b'b', b's', b'h', b'c', b'r', b'n', b'w', b'p', b'm', b'l', b'd', b'i', b'f'],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![b'u', b'e', b'i', b'a', b'o', b'r', b'y', b'l', b'I', b'E', b'R', 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![b'e', b'a', b'o', b'i', b'u', b'A', b'y', b'E', 0, 0, 0, 0, 0, 0, 0, 0],
                vec![b't', b'n', b'f', b's', b'\'', b'm', b'I', b'N', b'A', b'E', b'L', b'Z', b'r', b'V', b'R', b'C'],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![b'o', b'a', b'y', b'i', b'u', b'e', b'I', b'L', b'D', b'\'', b'E', b'Y', 0, 0, 0, 0],
                vec![b'r', b'i', b'y', b'a', b'e', b'o', b'u', b'Y', 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![b'h', b'o', b'e', b'E', b'i', b'u', b'r', b'w', b'a', b'H', b'y', b'R', b'Z', 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![b'h', b'i', b'e', b'a', b'o', b'r', b'I', b'y', 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![b'n', b't', b's', b'r', b'l', b'd', b'i', b'y', b'v', b'm', b'b', b'c', b'g', b'p', b'k', b'u'],
                vec![b'e', b'l', b'o', b'u', b'y', b'a', b'r', b'i', b's', b'j', b't', b'b', b'v', b'h', b'm', b'd'],
                vec![b'o', b'e', b'h', b'a', b't', b'k', b'i', b'r', b'l', b'u', b'y', b'c', b'q', b's', b'-', b'd'],
                vec![b'e', b'i', b'o', b'a', b's', b'y', b'r', b'u', b'd', b'l', b'-', b'g', b'n', b'v', b'm', b'f'],
                vec![b'r', b'n', b'd', b's', b'a', b'l', b't', b'e', b'm', b'c', b'v', b'y', b'i', b'x', b'f', b'p'],
                vec![b'o', b'e', b'r', b'a', b'i', b'f', b'u', b't', b'l', b'-', b'y', b's', b'n', b'c', b'\'', b'k'],
                vec![b'h', b'e', b'o', b'a', b'r', b'i', b'l', b's', b'u', b'n', b'g', b'b', b'-', b't', b'y', b'm'],
                vec![b'e', b'a', b'i', b'o', b't', b'r', b'u', b'y', b'm', b's', b'l', b'b', b'\'', b'-', b'f', b'd'],
                vec![b'n', b's', b't', b'm', b'o', b'l', b'c', b'd', b'r', b'e', b'g', b'a', b'f', b'v', b'z', b'b'],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![b'e', b'n', b'i', b's', b'h', b'l', b'f', b'y', b'-', b'a', b'w', b'g', b'\'', b'r', b'o', b't'],
                vec![b'e', b'l', b'i', b'y', b'd', b'o', b'a', b'f', b'u', b't', b's', b'k', b'w', b'v', b'm', b'p'],
                vec![b'e', b'a', b'o', b'i', b'u', b'p', b'y', b's', b'b', b'm', b'f', b'\'', b'n', b'-', b'l', b't'],
                vec![b'd', b'g', b'e', b't', b'o', b'c', b's', b'i', b'a', b'n', b'y', b'l', b'k', b'\'', b'f', b'v'],
                vec![b'u', b'n', b'r', b'f', b'm', b't', b'w', b'o', b's', b'l', b'v', b'd', b'p', b'k', b'i', b'c'],
                vec![b'e', b'r', b'a', b'o', b'l', b'p', b'i', b't', b'u', b's', b'h', b'y', b'b', b'-', b'\'', b'm'],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![b'e', b'i', b'o', b'a', b's', b'y', b't', b'd', b'r', b'n', b'c', b'm', b'l', b'u', b'g', b'f'],
                vec![b'e', b't', b'h', b'i', b'o', b's', b'a', b'u', b'p', b'c', b'l', b'w', b'm', b'k', b'f', b'y'],
                vec![b'h', b'o', b'e', b'i', b'a', b't', b'r', b'u', b'y', b'l', b's', b'w', b'c', b'f', b'\'', b'-'],
                vec![b'r', b't', b'l', b's', b'n', b'g', b'c', b'p', b'e', b'i', b'a', b'd', b'm', b'b', b'f', b'o'],
                vec![b'e', b'i', b'a', b'o', b'y', b'u', b'r', 0, 0, 0, 0, 0, 0, 0, 0, 0],
                vec![b'a', b'i', b'h', b'e', b'o', b'n', b'r', b's', b'l', b'd', b'k', b'-', b'f', b'\'', b'c', b'b'],
                vec![b'p', b't', b'c', b'a', b'i', b'e', b'h', b'q', b'u', b'f', b'-', b'y', b'o', 0, 0, 0],
                vec![b'o', b'e', b's', b't', b'i', b'd', b'\'', b'l', b'b', b'-', b'm', b'a', b'r', b'n', b'p', b'w'] ], 
            max_successor_n: 7,
            packs : vec![
                Pack {
                    word : 0x80000000,
                    bytes_packed : 1,
                    bytes_unpacked : 2,
                    offsets : [26, 24, 24, 24, 24, 24, 24, 24],
                    masks : [15, 3, 0, 0, 0, 0, 0, 0],
                    header_mask : 0xc0,
                    header : 0x80
                },
                Pack {
                    word : 0xc0000000,
                    bytes_packed : 2,
                    bytes_unpacked : 4,
                    offsets : [25, 22, 19, 16, 16, 16, 16, 16],
                    masks : [15, 7, 7, 7, 0, 0, 0, 0],
                    header_mask : 0xe0,
                    header : 0xc0
                },
                Pack {
                    word : 0xe0000000,
                    bytes_packed : 4,
                    bytes_unpacked : 8,
                    offsets : [23, 19, 15, 11, 8, 5, 2, 0],
                    masks : [31, 15, 15, 15, 7, 7, 7, 3],
                    header_mask : 0xf0,
                    header : 0xe0
                }
            ]
        }
    }
}

pub const MAX_CONSECUTIVES : usize = 8;

/// A pack is a structure that contains the information needed to pack and unpack a word.
#[derive(Debug, Clone, Eq, PartialEq)]
pub struct Pack {
    pub word : u32,
    pub bytes_packed : usize,
    pub bytes_unpacked : usize,
    pub offsets : [u32;MAX_CONSECUTIVES],
    pub masks : [i16;MAX_CONSECUTIVES],
    pub header_mask : u8,
    pub header : u8
}

